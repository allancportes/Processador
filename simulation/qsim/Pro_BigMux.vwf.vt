// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "06/10/2018 21:20:37"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          Processador
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module Processador_vlg_vec_tst();
// constants                                           
// general purpose registers
reg clockReal;
// wires                                               
wire [1:0] BIGMUXSelect;
wire [31:0] BitExtender16_32;
wire [31:0] BitExtender26_32;
wire [31:0] Data1;
wire [31:0] Instruction;
wire [9:0] addressIn;
wire [9:0] addressOut;
wire beq;
wire beqz;
wire bneq;
wire zero;

// assign statements (if any)                          
Processador i1 (
// port map - connection between master ports and signals/registers   
	.BIGMUXSelect(BIGMUXSelect),
	.BitExtender16_32(BitExtender16_32),
	.BitExtender26_32(BitExtender26_32),
	.Data1(Data1),
	.Instruction(Instruction),
	.addressIn(addressIn),
	.addressOut(addressOut),
	.beq(beq),
	.beqz(beqz),
	.bneq(bneq),
	.clockReal(clockReal),
	.zero(zero)
);
initial 
begin 
#1000000 $finish;
end 

// clockReal
initial
begin
	repeat(2)
	begin
		clockReal = 1'b0;
		clockReal = #200000 1'b1;
		# 200000;
	end
	clockReal = 1'b0;
end 
endmodule

